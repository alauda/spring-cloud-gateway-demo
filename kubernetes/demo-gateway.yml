apiVersion: v1
data:
  .dockerconfigjson: eyJhdXRocyI6eyJodHRwOi8vMTM5LjE4Ni4xOTQuMjE1OjMxMTA0Ijp7InVzZXJuYW1lIjoiYWRtaW4iLCJwYXNzd29yZCI6IkhhcmJvcjEyMzQ1IiwiZW1haWwiOiJkd2dhb0BhbGF1ZGEuaW8ifX19
kind: Secret
metadata:
  name: asf-registry
  namespace: demo
type: kubernetes.io/dockerconfigjson
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: asf-service
  namespace: demo
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: asf-service
  namespace: demo
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - services
      - endpoints
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: asf-service
  namespace: demo
subjects:
  - kind: ServiceAccount
    name: asf-service
    namespace: demo
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: asf-service
---
apiVersion: v1
kind: Secret
metadata:
  name: demo-gateway
  namespace: demo
data:
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: demo-gateway
  namespace: demo
data:
  application.yml: |-
    management:
      health:
        probes:
          enabled: true
      endpoints:
        web:
          exposure:
            include: "*"
    spring:
      redis.host: redis.demo.svc
      cloud:
        gateway:
          discovery:
            locator:
              enabled: true
          routes:
            - id: region_beijing
              uri: lb://demo-beijing
              predicates:
                - Path=/region/**
                - Header=region, beijing
                #- Weight=region_group,10
              filters:
                - StripPrefix=1
                - name: RequestRateLimiter
                  args:
                    redis-rate-limiter.replenishRate: 10
                    redis-rate-limiter.burstCapacity: 20
                    key-resolver: "#{@userKeyResolver}"
            - id: region_shenzhen
              uri: lb://demo-shenzhen
              predicates:
                - Path=/region/**
                - Header=region, shenzhen
                #- Weight=region_group,90
              filters:
                - StripPrefix=1
                - name: RequestRateLimiter
                  args:
                    redis-rate-limiter.replenishRate: 10
                    redis-rate-limiter.burstCapacity: 20
                    key-resolver: "#{@userKeyResolver}"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-gateway
  namespace: demo
  labels:
    service.asf.io/name: demo-gateway
spec:
  selector:
    matchLabels:
      service.asf.io/name: demo-gateway
  template:
    metadata:
      labels:
        service.asf.io/name: demo-gateway
    spec:
      serviceAccountName: asf-service
      imagePullSecrets:
        - name: asf-registry
      containers:
        - image: 172.18.0.91:31104/demo/demo-gateway:latest
          imagePullPolicy: Always
          name: demo-gateway
          resources:
            limits:
              cpu: '1'
              memory: 1000Mi
            requests:
              cpu: '1'
              memory: 1000Mi
          readinessProbe:
            failureThreshold: 2
            httpGet:
              path: /actuator/health/readiness
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 100
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            failureThreshold: 1
            httpGet:
              path: /actuator/health/liveness
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 100
            successThreshold: 1
            timeoutSeconds: 2
            periodSeconds: 8
---
apiVersion: v1
kind: Service
metadata:
  name: demo-gateway
  namespace: demo
spec:
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    service.asf.io/name: demo-gateway
  type: NodePort